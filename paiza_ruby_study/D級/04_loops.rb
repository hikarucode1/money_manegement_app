# 問題1: 指定回数の出力
#
# 問題文：
# 整数 n が入力されます。
# "Hello" を n 回出力してください。
#
# 入力例：
# 3
#
# 出力例：
# Hello
# Hello
# Hello

# 解答例1
n = gets.to_i
n.times do
  puts "Hello"
end

# 別解（for文）
# n = gets.to_i
# for i in 1..n
#   puts "Hello"
# end

# ==================================================
# 問題2: 1からNまでの数列
#
# 問題文：
# 整数 n が入力されます。
# 1 から n までの整数を1行ずつ出力してください。
#
# 入力例：
# 5
#
# 出力例：
# 1
# 2
# 3
# 4
# 5

# 解答例2
# n = gets.to_i
# (1..n).each do |i|
#   puts i
# end

# 別解（times使用）
# n = gets.to_i
# n.times do |i|
#   puts i + 1
# end

# ==================================================
# 問題3: 累積和
#
# 問題文：
# 整数 n が入力されます。
# 1 から n までの整数の合計を出力してください。
#
# 入力例：
# 5
#
# 出力例：
# 15

# 解答例3
# n = gets.to_i
# sum = 0
# (1..n).each do |i|
#   sum += i
# end
# puts sum

# 別解（公式使用）
# n = gets.to_i
# puts n * (n + 1) / 2

# 別解（sumメソッド）
# n = gets.to_i
# puts (1..n).sum

# ==================================================
# 問題4: 九九の表
#
# 問題文：
# 整数 n が入力されます。
# n の段の九九を出力してください。
# 形式: "n x i = 結果" (i は 1 から 9)
#
# 入力例：
# 3
#
# 出力例：
# 3 x 1 = 3
# 3 x 2 = 6
# 3 x 3 = 9
# 3 x 4 = 12
# 3 x 5 = 15
# 3 x 6 = 18
# 3 x 7 = 21
# 3 x 8 = 24
# 3 x 9 = 27

# 解答例4
# n = gets.to_i
# (1..9).each do |i|
#   puts "#{n} x #{i} = #{n * i}"
# end

# ==================================================
# 問題5: 偶数の個数
#
# 問題文：
# 整数 n が入力されます。
# 1 から n までの偶数の個数を出力してください。
#
# 入力例：
# 10
#
# 出力例：
# 5

# 解答例5
# n = gets.to_i
# count = 0
# (1..n).each do |i|
#   if i % 2 == 0
#     count += 1
#   end
# end
# puts count

# 別解（select使用）
# n = gets.to_i
# puts (1..n).select { |i| i % 2 == 0 }.length

# 別解（計算）
# n = gets.to_i
# puts n / 2

# ==================================================
# 問題6: 複数行の処理
#
# 問題文：
# 最初に整数 n が入力されます。
# 次に n 行にわたって整数が1つずつ入力されます。
# それらの整数の合計を出力してください。
#
# 入力例：
# 3
# 10
# 20
# 30
#
# 出力例：
# 60

# 解答例6
# n = gets.to_i
# sum = 0
# n.times do
#   num = gets.to_i
#   sum += num
# end
# puts sum

# ==================================================
# 問題7: フィボナッチ数列
#
# 問題文：
# 整数 n が入力されます。
# フィボナッチ数列の n 番目の値を出力してください。
# （1番目: 1, 2番目: 1, 3番目: 2, 4番目: 3, ...）
#
# 入力例：
# 7
#
# 出力例：
# 13

# 解答例7
# n = gets.to_i
# if n <= 2
#   puts 1
# else
#   a, b = 1, 1
#   (3..n).each do
#     a, b = b, a + b
#   end
#   puts b
# end

# ==================================================
# 学習ポイント
#
# 1. times: 指定回数の繰り返し
# 2. (start..end).each: 範囲を使った繰り返し
# 3. for文: for i in range の形式
# 4. while文: 条件が真の間繰り返し
# 5. 累積計算: 変数に値を蓄積していく
# 6. 多重代入: a, b = b, a + b
# 7. select, sum等の便利メソッド
# 8. カウンタ変数の使い方